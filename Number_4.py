import sys
import random
from PyQt5 import QtWidgets, uic
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QFont


class PseudonymGame(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–∑ —Ñ–∞–π–ª–∞
        uic.loadUi('pseudonym_game.ui', self)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        self.setFixedSize(500, 600)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self.newGameButton.clicked.connect(self.start_new_game)
        self.take1Button.clicked.connect(lambda: self.player_turn(1))
        self.take2Button.clicked.connect(lambda: self.player_turn(2))
        self.take3Button.clicked.connect(lambda: self.player_turn(3))

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–≥—Ä—ã
        self.total_stones = 0
        self.current_stones = 0
        self.game_active = False

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –ª–æ–≥–∞
        font = QFont('Courier New', 9)
        self.logText.setFont(font)

        # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ —Ö–æ–¥–∞ –¥–æ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
        self.set_move_buttons_enabled(False)

    def start_new_game(self):
        """–ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã"""
        self.total_stones = self.stonesSpinBox.value()
        self.current_stones = self.total_stones
        self.game_active = True

        # –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–∞
        self.logText.clear()

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.update_stones_display()
        self.turnLabel.setText("–í–∞—à —Ö–æ–¥! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–º–Ω–∏")
        self.turnLabel.setStyleSheet("font-size: 14px; color: #27ae60; font-weight: bold;")
        self.add_to_log(f"–ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã! –ö–∞–º–Ω–µ–π: {self.total_stones}")
        self.add_to_log("–ò–≥—Ä–æ–∫ —Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–º")

        # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ —Ö–æ–¥–∞
        self.set_move_buttons_enabled(True)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
        if self.is_winning_position(self.current_stones):
            self.add_to_log("‚ö†Ô∏è  –ò–ò –∏–º–µ–µ—Ç –≤—ã–∏–≥—Ä—ã—à–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é!")
        else:
            self.add_to_log("üéØ –£ –≤–∞—Å –µ—Å—Ç—å —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å!")

    def player_turn(self, stones_to_take):
        """–•–æ–¥ –∏–≥—Ä–æ–∫–∞"""
        if not self.game_active:
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ö–æ–¥–∞
        if stones_to_take < 1 or stones_to_take > 3:
            QtWidgets.QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ú–æ–∂–Ω–æ –≤–∑—è—Ç—å —Ç–æ–ª—å–∫–æ 1, 2 –∏–ª–∏ 3 –∫–∞–º–Ω—è!")
            return

        if stones_to_take > self.current_stones:
            QtWidgets.QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ–ª—å–∑—è –≤–∑—è—Ç—å –±–æ–ª—å—à–µ –∫–∞–º–Ω–µ–π, —á–µ–º –µ—Å—Ç—å –Ω–∞ —Å—Ç–æ–ª–µ!")
            return

        # –•–æ–¥ –∏–≥—Ä–æ–∫–∞
        self.current_stones -= stones_to_take
        self.add_to_log(f"üë§ –ò–≥—Ä–æ–∫ –≤–∑—è–ª {stones_to_take} –∫–∞–º–Ω–µ–π. –û—Å—Ç–∞–ª–æ—Å—å: {self.current_stones}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã –∏–≥—Ä–æ–∫–∞
        if self.current_stones == 0:
            self.game_over("–ò–≥—Ä–æ–∫")
            return

        # –•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
        self.turnLabel.setText("–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞...")
        self.turnLabel.setStyleSheet("font-size: 14px; color: #e67e22; font-weight: bold;")
        self.set_move_buttons_enabled(False)

        # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ "–¥—É–º–∞–Ω–∏—è" –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
        QtWidgets.QApplication.processEvents()
        QtWidgets.QApplication.processEvents()

        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ö–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
        self.computer_turn()

    def computer_turn(self):
        """–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ —Å –≤—ã–∏–≥—Ä—ã—à–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π"""
        if self.current_stones == 0:
            return

        # –í—ã—á–∏—Å–ª—è–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ö–æ–¥
        stones_to_take = self.calculate_computer_move()

        # –•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
        self.current_stones -= stones_to_take
        self.add_to_log(f"ü§ñ –ö–æ–º–ø—å—é—Ç–µ—Ä –≤–∑—è–ª {stones_to_take} –∫–∞–º–Ω–µ–π. –û—Å—Ç–∞–ª–æ—Å—å: {self.current_stones}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
        if self.current_stones == 0:
            self.game_over("–ö–æ–º–ø—å—é—Ç–µ—Ä")
            return

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ö–æ–¥ –∏–≥—Ä–æ–∫—É
        self.turnLabel.setText("–í–∞—à —Ö–æ–¥! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–º–Ω–∏")
        self.turnLabel.setStyleSheet("font-size: 14px; color: #27ae60; font-weight: bold;")
        self.set_move_buttons_enabled(True)
        self.update_stones_display()

    def calculate_computer_move(self):
        """–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ö–æ–¥–∞ –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"""
        # –í—ã–∏–≥—Ä—ã—à–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: –æ—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–º–Ω–µ–π, –∫—Ä–∞—Ç–Ω–æ–µ 4
        remainder = self.current_stones % 4

        if remainder == 0:
            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∞—Ç–Ω–æ 4, –±–µ—Ä–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (1-3)
            return random.randint(1, min(3, self.current_stones))
        else:
            # –ë–µ—Ä–µ–º —Å—Ç–æ–ª—å–∫–æ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∫—Ä–∞—Ç–Ω–æ–µ 4
            return remainder

    def is_winning_position(self, stones):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–∑–∏—Ü–∏—è –≤—ã–∏–≥—Ä—ã—à–Ω–æ–π –¥–ª—è —Ö–æ–¥—è—â–µ–≥–æ"""
        return stones % 4 != 0

    def game_over(self, winner):
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã"""
        self.game_active = False
        self.set_move_buttons_enabled(False)

        if winner == "–ò–≥—Ä–æ–∫":
            self.turnLabel.setText("üéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
            self.turnLabel.setStyleSheet("font-size: 16px; color: #27ae60; font-weight: bold;")
            self.add_to_log("üéâ –ü–û–ë–ï–î–ê –ò–ì–†–û–ö–ê!")
        else:
            self.turnLabel.setText("üíª –ü–æ–±–µ–¥–∏–ª –∫–æ–º–ø—å—é—Ç–µ—Ä!")
            self.turnLabel.setStyleSheet("font-size: 16px; color: #e74c3c; font-weight: bold;")
            self.add_to_log("üíª –ü–û–ë–ï–î–ê –ö–û–ú–ü–¨–Æ–¢–ï–†–ê!")

        self.add_to_log("–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ '–ù–æ–≤–∞—è –∏–≥—Ä–∞' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è")

    def update_stones_display(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–º–Ω–µ–π"""
        self.stonesLabel.setText(f"–ö–∞–º–Ω–µ–π –Ω–∞ —Å—Ç–æ–ª–µ: {self.current_stones}")

        # –í–∏–∑—É–∞–ª—å–Ω–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–º–Ω–µ–π
        if self.current_stones <= 3:
            color = "#e74c3c"  # –∫—Ä–∞—Å–Ω—ã–π - –º–∞–ª–æ –∫–∞–º–Ω–µ–π
        elif self.current_stones <= 10:
            color = "#f39c12"  # –æ—Ä–∞–Ω–∂–µ–≤—ã–π - —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        else:
            color = "#27ae60"  # –∑–µ–ª–µ–Ω—ã–π - –º–Ω–æ–≥–æ –∫–∞–º–Ω–µ–π

        self.stonesLabel.setStyleSheet(f"font-size: 16px; font-weight: bold; color: {color};")

    def set_move_buttons_enabled(self, enabled):
        """–í–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ö–æ–¥–∞"""
        self.take1Button.setEnabled(enabled)
        self.take2Button.setEnabled(enabled)
        self.take3Button.setEnabled(enabled)

        # –í–∏–∑—É–∞–ª—å–Ω–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫
        style_enabled = "font-weight: bold; background-color: #3498db; color: white;"
        style_disabled = "background-color: #bdc3c7; color: #7f8c8d;"

        for button in [self.take1Button, self.take2Button, self.take3Button]:
            button.setStyleSheet(style_enabled if enabled else style_disabled)

    def add_to_log(self, message):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥"""
        self.logText.append(message)
        # –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        self.logText.verticalScrollBar().setValue(
            self.logText.verticalScrollBar().maximum()
        )


def main():
    app = QtWidgets.QApplication(sys.argv)
    game = PseudonymGame()
    game.show()
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()